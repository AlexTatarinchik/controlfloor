<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>ControlFloor</title>

<link rel="stylesheet" href="https://cdn.materialdesignicons.com/4.9.95/css/materialdesignicons.min.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto&display=swap" />
<link rel="stylesheet" href="/assets/css/styles.css" />
<link rel="stylesheet" href="/assets/css/sidebar.css" />
		
<meta charset="utf-8">
<style>
  canvas {
    border: solid 1px black;
  }
</style>
<script>
  function getel( id ) {
    return document.getElementById( id );
  }
  function getCursorPosition(canvas, event) {
    const rect = canvas.getBoundingClientRect()
    const x = event.clientX - rect.left
    const y = event.clientY - rect.top
    console.log("x: " + x + " y: " + y)
    return [x,y];
  }
  var session='';
  var clickWid={{ html .clickWidth }};
  var clickHeg={{ html .clickHeight }};
  function req( type, url, handler, body ) {
    var xhr = new XMLHttpRequest();
    xhr.open( type, url );
    xhr.responseType = 'json';
    xhr.onload = function(x) { handler(x,xhr); }
    if( type == 'POST' && body ) xhr.send(body);
    else xhr.send();
  }
  function clickAt( pos ) {
    req( 'POST', 'http://localhost:8102/session/' + session + '/wda/tap/0', function() {}, JSON.stringify( {
        x: (pos[0]/(750/2))*clickWid, 
        y: (pos[1]/(1334/2))*clickHeg
    } ) );
  }
  window.addEventListener("load", function(evt) {
    var canvas = getel("canvas");
    var ctx    = canvas.getContext("2d");
    var ws;
    
    canvas.onclick = function( event ) {
      var pos = getCursorPosition( canvas, event );
      if( !session ) {
        req( 'GET', 'http://localhost:8102/status', function( a,xhr ) {
          session = xhr.response.sessionId;          
          clickAt( pos )
        } );
      } else {
        clickAt( pos );
      }
    }
    
    //ws = new WebSocket("ws:\/\/localhost:8000\/echo");
    ws = new WebSocket("ws:\/\/localhost:8080\/imgStream?udid={{ html .udid }}");
    ws.onopen = function( event ) {
        console.log("Websocket open");
    }
    ws.onclose = function( event ) {
        console.log("Websocket closed");
        ws = null;
    }
    ws.onmessage = function( event ) {
        if( event.data instanceof Blob ) {
          var image = new Image();
          var url;
          image.onload = function() {
            ctx.drawImage(image, 0, 0, 750/2, 1334/2 );
            URL.revokeObjectURL( url );
          };
          image.onerror = function( e ) {
            console.log('Error during loading image:', e);
          }
          var blob = event.data;
          
          url = URL.createObjectURL( blob );
          image.src = url;
        }
    }
    ws.onerror = function( event ) {
        console.log( "Error: ", event.data );
    }
  });
</script>
</head>

<body>
    {{template "sidebar" dict "udid" .udid }}
    <div class="main">
       <canvas id="canvas" width="375" height="667"></canvas>
    </div>
</body>
</html>
